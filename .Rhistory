help(read.table)
x <- 1:4
y <- 2:3
x + y
swirl()
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1:4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(1, 10, by = 0.5)
seq(0, 10, by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Meredith")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_datae <- sample(c(y, z), 100)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
clear
?clear
??clear
install.packages("meme")
if(!require("devtools")) install.packages("devtools")
library("devtools")
install_github("leeper/meme")
library("meme")
templates -> get_templates("memecaptain")
templates <- get_templates("memecaptain")
plot(yuno <- create_meme(templates[[55]], "R CMD check", "y u no work?"))
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
head(mydata)
summary(mydata)
mydata.model <- lm(mydata$gre~mydata$gpa)
summary(mydata.model)
install.packages("foreign", dependencies=TRUE)
library("foreign")
?foreign
??foreign
library("sos")
install.packages("sos", dependencies=TRUE)
library("sos")
findFn("non-linear regression")
?sos
??sos
??foreign
hist(cars$dist)
?hist()
plot(anscombe$x1, anscombe$y1, xlab="x1", ylab="y1", main="Anscombe 1")
abline(lm(anscombe$y1~anscombe$x1))
plot(anscombe$x2, anscombe$y2, xlab="x2", ylab="y2", main="Anscombe 2")
abline(lm(anscombe$y2~anscombe$x2))
?foreign
install.packages("twitteR")
library("twitteR")
my.key <- "ih6AgARYNrsd7nwYpCoq1v22o"
my.secret <- "PJID1goKLbGiQL6hgIltm4ggxiMpSEujQFLRGw22wOcVsWDR6m"
View(mydata)
?twitter
??twitteR
?twitteR
is.installed("twitteR")
is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
is.installed("twitteR")
my.key <- "ih6AgARYNrsd7nwYpCoq1v22o"
my.secret <- "PJID1goKLbGiQL6hgIltm4ggxiMpSEujQFLRGw22wOcVsWDR6m"
install.packages(c("ggplot2", "MASS", "Matrix", "Rcpp", "swirl", "yaml"))
?function
??function
d
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
Cred <- OAuthFactory$new(consumerKey=cKey,
consumerSecret=cSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
Cred <- OAuthFactory$new(consumerKey=my.key,
consumerSecret=my.secret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
cred$handshake
cred$handshake()
cred <- OAuthFactory$new(
consumerKey <- my.key,
consumerSecret <- my.secret,
requestURL <- requestURL,
accessURL <- accessURL,
authURL <- authURL
)
my.key <- "ih6AgARYNrsd7nwYpCoq1v22o"
my.secret <- "PJID1goKLbGiQL6hgIltm4ggxiMpSEujQFLRGw22wOcVsWDR6m"
cred <- OAuthFactory$new(
consumerKey = my.key,
consumerSecret = my.secret,
requestURL = "https://api.twitter.com/oauth/request_token",
accessURL = "https://api.twitter.com/oauth/access_token",
)
cred <- OAuthFactory$new(
consumerKey = my.key,
consumerSecret = my.secret,
requestURL = "https://api.twitter.com/oauth/request_token",
accessURL = "https://api.twitter.com/oauth/access_token",
authURL = "https://api.twitter.com/oauth/authorize"
)
cred$handshake()
registerTwitterOAuth(cred)
bigdata <- searchTwitter("#bigdata", n=1500)
class(bigdata)
head(bigdata)
bigdata[[4]]
length(bigdata)
rate.limit <- getCurRateLimitInfo(c('lists'))
rate.limit
bigdata.df <- do.call(rbind, lapply(bigdata, as.data.frame))
write.csv(bigdata.df, "~/Dropbox/socialmediaminingwithr/bigdata.csv")
install.packages("tm", dependencies = TRUE)
library("tm")
bigdata_list <- sapply(bigdata, function(x), x$getText())
bigdata_list <- sapply(bigdata, function(x) x$getText())
bigdata_corpus <- Corpus(VectorSource(bigdata_list))
bigdata_corpus <- tm_map(bigdata_corpus, tolower)
bigdata_corpus <- tm_map(bigdata_corpus, removePunctuation)
bigdata_corpus <- tm_map(bigdata_corpus, function(x) removeWords(x, stopwords()))
install.packages("wordcloud")
library("wordcloud")
wordcloud(bigdata_corpus)
install.packages(c("tm", "wordcloud"))
library(c("tm", "wordcloud"))
library("tm")
library("wordcloud")
wordcloud(bigdata_corpus)
??wordcloud
plot(bigdata_corpus)
bigdata.tdm <- TermDocumentMatrix(bigdata_corpus)
?UseMethod()
